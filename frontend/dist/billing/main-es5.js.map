{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/base/base.component.ts","webpack:///src/app/components/base/base.component.html","webpack:///src/app/components/sure-dialog/sure-dialog.component.ts","webpack:///src/app/components/sure-dialog/sure-dialog.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/forgetpassword/forgetpassword.component.ts","webpack:///src/app/forgetpassword/forgetpassword.component.html","webpack:///src/app/header-logo/header-logo.component.ts","webpack:///src/app/header-logo/header-logo.component.html","webpack:///src/app/helpers/constant.ts","webpack:///src/app/helpers/guardian.ts","webpack:///src/app/helpers/urlmappers.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/models/assistantinformation.ts","webpack:///src/app/models/personalinformation.ts","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/profile.service.ts","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/usermanagement/assistant.modal.component.ts","webpack:///src/app/usermanagement/assitant.modaltemplate.component.html","webpack:///src/app/usermanagement/usermanagement.component.ts","webpack:///src/app/usermanagement/usermanagement.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","authService","title","logout","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","providers","BaseComponent","messageService","msg","severity","add","summary","detail","setTimeout","SureDialogComponent","message","selectedValue","changes","loadModal","emit","yesClicked","DashboardComponent","formBuilder","errorMessage","submitted","personalinformationForm","group","controls","ForgetpasswordComponent","router","isforgetLoadDone","forgetPasswordForm","email","required","invalid","getFormControls","value","forgetPassword","subscribe","res","resetFormControls","updateToastMessage","forgetPasswordSuccess","success","err","staus","invalidEmail","error","serverSideErrr","reset","forgetPasswordFormSubmit","HeaderLogoComponent","console","log","Constants","allfieldrequired","checkmail","invalidLogin","profileUpdated","profileDeleted","genericMessage","Guardian","route","state","getLoggedInStatus","navigateByUrl","UrlMappers","baseUrl","baseurl","forgetPasswordUsername","forgetpassu","forgetPasswordPassword","forgetpassp","loginUrl","resetPasswordUrl","updateProfile","getProfile","getAssistantProfile","addAssistantProfile","getAssistantProfileById","updateAssistantProfile","deleteSlaveDetails","uploadImage","downloadImage","LoginComponent","isLoadingDone","loginForm","username","password","get","login","responseData","resetLoginControls","localStorage","setItem","status","loginFormSubmit","AssistantInformation","PersonalInformation","ProfileComponent","profileService","changePasswordSubmitted","isPasswordChanged","isPasswordMatched","isProfileLoadDone","name","mobile","min","address","company","gst","logo","changePasswordForm","cpassword","currentpassword","getProfileInfo","disablePersonalInfoForm","getItem","getProfileInformation","profileData","setValue","Name","Email","Mobile","GST","Address","Company","getImage","response","reader","FileReader","addEventListener","result","readAsDataURL","profile","updateProfileInformation","updatedResponse","currentPassword","getChangePasswordFormControls","newPassword","confirmPassword","updatePassword","resetPasswordControls","isDisabled","btnControl","document","getElementById","disable","setAttribute","enable","removeAttribute","files","length","mimeType","type","match","onload","_event","clear","personalInfoFormSubmit","onFileChanged","changePasswordFormSubmit","AuthenticationService","http","loginurl","content","post","pipe","data","url","ProfileService","headers","oldPassword","a","asstInfo","MasterEmail","Password","IsDashboard","UserName","IsQuotation","IsProduct","IsSales","IsReminder","IsReports","IsSettings","IsInvoice","asstDetails","ID","imageFile","imageName","responseType","Authorization","SidebarComponent","authServices","componentToLoad","companyName","selectedComponent","componentSelector","DialogOverviewExampleDialog","assistantFormSubmitted","selectedFeatures","ischkBoxError","isEdit","emitData","assistantForm","initAssistantFormControls","getAssistantRecordById","selectedRecordId","asstusername","asstpassword","dashboard","requiredTrue","product","sales","reports","quotation","invoice","reminder","settings","asstProfile","asstControl","getAssistantFormControls","indexOf","addAssistantInformation","event","preventDefault","target","checked","includes","push","index","splice","assistInfo","updateAssistantRecordById","onCheckboxChange","closeModal","UsermanagementComponent","gridDatas","loadAddEditModal","dialog_title","getAsstProfileInfo","masterEmail","getAssistantInformation","asstinfo","selectedButton","deleteAssistantRecord","$event","dialogButtonClickEvent","handleSureDialogResult","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ForgetpasswordComponent } from './forgetpassword/forgetpassword.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { Guardian } from './helpers/guardian';\n\nconst routes: Routes = [\n  { path: '', component: SidebarComponent, canActivate: [Guardian] },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: SidebarComponent, canActivate: [Guardian] },\n  { path: 'forgetpassword', component: ForgetpasswordComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'Billing';\n  constructor(private authService: AuthenticationService){}\n   \n   ngOnDestroy(): void {\n        this.authService.logout();\n    }\n}\n","<p-toast position=\"top-right\" [modal]=\"true\" [baseZIndex]=\"5000\">\r\n</p-toast>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { ForgetpasswordComponent } from './forgetpassword/forgetpassword.component';\r\nimport { HeaderLogoComponent } from './header-logo/header-logo.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport { Guardian } from './helpers/guardian';\r\nimport { ProfileService } from './services/profile.service';\r\nimport { UsermanagementComponent } from './usermanagement/usermanagement.component';\r\nimport { DialogOverviewExampleDialog } from './usermanagement/assistant.modal.component';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessageService } from 'primeng/api';\r\nimport { TableModule } from 'primeng/table';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { SureDialogComponent } from './components/sure-dialog/sure-dialog.component';\nimport { BaseComponent } from './components/base/base.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    ForgetpasswordComponent,\r\n    HeaderLogoComponent,\r\n    ProfileComponent,\r\n    SidebarComponent,\r\n    UsermanagementComponent,\r\n    DialogOverviewExampleDialog,\r\n    SureDialogComponent,\r\n    BaseComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    ProgressSpinnerModule,\r\n    FieldsetModule,\r\n    ToastModule,\r\n    TableModule,\r\n    SidebarModule,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  providers: [AuthenticationService, ProfileService, Guardian, HttpClient, MessageService],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.sass']\n})\nexport class BaseComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n\tngOnInit(): void {}\n\n\tupdateToastMessage(msg, severity, title){\n    \tthis.messageService.add({severity:severity, summary:title, detail:msg});\n  \t}\n\n  \tlogoutAfterTwoSeconds() {\n  \t setTimeout(() => {\n              //this.authService.logout();\n          }, 2000)\n  \t};\n}\n","<p>base works!</p>\n","import { Component, OnInit, Inject, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-sure-dialog',\n  templateUrl: './sure-dialog.component.html',\n  styleUrls: ['./sure-dialog.component.sass'],\n})\nexport class SureDialogComponent implements OnInit {\n  @Input('message')\n  message: string = '';\n  @Input('isNoButtonNeed')\n  isNoButtonNeed: boolean;\n  @Output('selectedValue')\n  selectedValue = new EventEmitter<string>();\n  loadModal:boolean;\n\n  constructor() {\n  }\n\n  ngOnInit(): void { }\n\n  ngOnChanges(changes: SimpleChanges){\n\t  \tif(this.message !== '') this.loadModal = true;\t\n  }\n  \n  yesClicked(){\n  this.loadModal = false;\n\tthis.selectedValue.emit('yes');\n  }\n\n  noClicked(){\n  \tthis.loadModal = false;\n  \tthis.selectedValue.emit('no');\n  }\n}\n","<p-sidebar  [style]=\"{height: '185px'}\" \n\t\t\t[(visible)]=\"loadModal\" \n\t\t\tposition=\"bottom\" \n\t\t\t[baseZIndex]=\"10000\">\n    <h1 style=\"font-weight:normal\">{{message}}</h1>\n    <div>\n      \t<button pButton type=\"button\" (click)=\"yesClicked()\" class=\"button\">\n      \t\tYes\n  \t  \t</button>\n      \t<button pButton type=\"button\" *ngIf=\"isNoButtonNeed\" (click)=\"noClicked()\" class=\"button\">\n      \t\tNo\n     \t</button>\n    </div>\n  </p-sidebar>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.sass'],\n})\nexport class DashboardComponent implements OnInit {\n  personalinformationForm: FormGroup;\n  errorMessage: string = '';\n  submitted: boolean = false;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.personalinformationForm = this.formBuilder.group({});\n  }\n\n  get getFormControls() {\n    return this.personalinformationForm.controls;\n  }\n\n  personalInfoFormSubmit() {}\n}\n","dashboard works","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { UrlMappers } from '../helpers/urlmappers';\nimport { Router } from '@angular/router';\nimport { Constants } from '../helpers/constant';\nimport { MessageService } from 'primeng/api';\nimport { BaseComponent } from '../components/base/base.component';\n\n@Component({\n  selector: 'app-forgetpassword',\n  templateUrl: './forgetpassword.component.html',\n  styleUrls: ['./forgetpassword.component.sass'],\n})\nexport class ForgetpasswordComponent extends BaseComponent implements OnInit {\n  forgetPasswordForm: FormGroup;\n  submitted: boolean = false;\n  isforgetLoadDone: boolean = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router,\n    public messageService: MessageService\n  ) {\n    super(messageService);\n  }\n\n  ngOnInit(): void {\n    this.forgetPasswordForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  get getFormControls() {\n    return this.forgetPasswordForm.controls;\n  }\n\n  forgetPasswordFormSubmit() {\n    this.submitted = true;\n    this.isforgetLoadDone = false;\n    if (this.forgetPasswordForm.invalid) {\n      this.isforgetLoadDone = true;\n      return;\n    }\n\n    const email = this.getFormControls['email'].value;\n    // this.authService\n    //   .getToken(\n    //     UrlMappers.forgetPasswordUsername,\n    //     UrlMappers.forgetPasswordPassword\n    //   )\n    //   .subscribe((responseToken) => {\n        //let token = responseToken.split(':')[1].trim();\n        this.authService.forgetPassword(email).subscribe(\n          (res) => {\n            if (res === 'Success') {\n              this.isforgetLoadDone = true;\n              this.resetFormControls();\n               this.updateToastMessage(Constants.forgetPasswordSuccess, Constants.success ,\"Forget Password\");\n            }\n          },\n          (err) => {\n            if (err.staus === 401) {\n              this.isforgetLoadDone = true;\n              this.updateToastMessage(Constants.invalidEmail, Constants.error ,\"Forget Password\");\n              this.resetFormControls();\n            } else {\n              this.isforgetLoadDone = true;\n              this.updateToastMessage(Constants.serverSideErrr, Constants.error ,\"Forget Password\");\n              this.resetFormControls();\n            }\n          }\n        );\n      //});\n  }\n\n  resetFormControls() {\n    this.submitted = false;\n    this.forgetPasswordForm.reset();\n  }\n}\n","<div class=\"container-fluid\">\n  <app-header-logo></app-header-logo> \n  <div class=\"login-form pad1em shadow font-family\">\n    <div>\n      <div>Forget Password</div>\n      <hr class=\"hr\" />\n    </div>\n    <br />\n    <div *ngIf=\"!isforgetLoadDone\">\n      <p-progressSpinner class=\"loading\"></p-progressSpinner>\n    </div>\n    <div>\n      <form\n        [formGroup]=\"forgetPasswordForm\"\n        (ngSubmit)=\"forgetPasswordFormSubmit()\"\n        class=\"form-design  margin-right\"\n      >\n        <div class=\"form-group\">\n          <label for=\"username\" class=\"label-design\">Email</label><br />\n          <input\n            type=\"text\"\n            formControlName=\"email\"\n            autocomplete=\"off\"\n            name=\"email\"\n            placeholder=\"Enter your username\"\n            class=\"form-control textbox\"\n          />\n        </div>\n        <div\n          *ngIf=\"submitted && getFormControls.email.errors\"\n          class=\"error-message\"\n        >\n          <div *ngIf=\"getFormControls.email.errors.required\">\n            Username is required\n          </div>\n           <div *ngIf=\"getFormControls.email.errors.email\">\n            Email must be in format.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <button type=\"submit\" class=\"button button-color-orange\">Get Password</button>\n        </div>\n        <a routerLink=\"/login\" class=\"color link\">Back to Login</a>\n      </form>\n      <div style=\"margin-bottom: 1em;\" >\n        <hr class=\"hr-bottom\" />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header-logo',\n  templateUrl: './header-logo.component.html',\n  styleUrls: ['./header-logo.component.sass']\n})\nexport class HeaderLogoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log('welcome to header logo ');\n  }\n\n}\n","<div>\n  <div class=\"width-40\">\n    <div class=\"float-left\">\n      <img\n        class=\"img-design\"\n        src=\"./assets/images/login-logo.jpg\"\n        alt=\"Adrobee Logo\"\n        srcset=\"\"\n      />\n    </div>\n    <!-- <div>\n      <div>\n        <span class=\"title-design\">Adrobee</span>\n        <br />\n        <span class=\"sub-title-design\">- Source for Innovation</span>\n      </div>\n    </div> -->\n  </div>\n</div>\n","export class Constants {\r\n  static allfieldrequired = 'All Fields are Required';\r\n  static checkmail = 'Mail sent check';\r\n  static invalidLogin = \"Invalid Username and Password\";\r\n  static invalidEmail = \"Email ID not registered with the application\";\r\n  static profileUpdated = \"Profile Updated Successfully\";\r\n  static profileDeleted = \"Profile Deleted Successfully\";\r\n  static serverSideErrr = \"Something went wrong. Please try again later.\";\r\n  static forgetPasswordSuccess = \"Instructions sent to your email. Kidly check.\";\r\n  static genericMessage = \"Changes done Successfully\";\r\n\r\n  // toast severity \r\n  static error = \"error\";\r\n  static success = \"success\";\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class Guardian implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.authService.getLoggedInStatus) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigateByUrl('/login');\r\n    return false;\r\n  }\r\n}\r\n","import { environment } from '../../environments/environment';\r\n\r\nexport module UrlMappers {\r\n  const baseUrl = environment.baseurl;\r\n  export const forgetPasswordUsername = environment.forgetpassu;\r\n  export const forgetPasswordPassword = environment.forgetpassp;\r\n\r\n  // export const encodeUrl = baseUrl + '/api/Base64/Encode/';\r\n  export const loginUrl = baseUrl + '/api/auth/signin';\r\n  export const resetPasswordUrl = baseUrl + '/api/Login/ResetPassword';\r\n  export const updateProfile = baseUrl + '/api/Profile/UpdateMasterProfile';\r\n  export const getProfile = baseUrl + '/api/Profile/GetMasterProfileByEmailId';\r\n  export const getAssistantProfile =\r\n    baseUrl + '/api/UserManagement/GetSlaveDetailsByMasterEmailId';\r\n  export const addAssistantProfile =\r\n    baseUrl + '/api/UserManagement/InsertSlaveDetails';\r\n  export const getAssistantProfileById =\r\n    baseUrl + '/api/UserManagement/GetSlaveDetailsByMasterById';\r\n  export const updateAssistantProfile =\r\n    baseUrl + '/api/UserManagement/UpdateSlaveDetails';\r\n  export const deleteSlaveDetails =\r\n    baseUrl + '/api/UserManagement/DeleteSlaveDetails';\r\n  export const forgetPassword = baseUrl + '/api/Login/ForgetPassword';\r\n  export const uploadImage = baseUrl + '/api/Profile/UploadImage';\r\n  export const downloadImage = baseUrl + '/api/Profile/DownloadImage';\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Constants } from '../helpers/constant';\nimport { MessageService } from 'primeng/api';\nimport { BaseComponent } from '../components/base/base.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass'],\n})\nexport class LoginComponent extends BaseComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted: boolean = false;\n  isLoadingDone: boolean = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthenticationService,\n    public messageService: MessageService\n  ) {\n    super(messageService);\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  get getFormControls() {\n    return this.loginForm.controls;\n  }\n\n  loginFormSubmit():void {\n    this.submitted = true;\n    this.isLoadingDone = false;\n    if (this.loginForm.invalid) { this.isLoadingDone = true; return;}\n\n    const username = this.loginForm.get('username').value;\n    const password = this.loginForm.get('password').value;\n\n      this.authService.login(username, password).subscribe(\n        (responseData) => {    \n          if (responseData.message === \"authenticated\") {\n            this.isLoadingDone = true;\n            this.resetLoginControls();\n            localStorage.setItem('email', username);\n            this.router.navigateByUrl('/dashboard');\n          } else if (responseData.message === \"not authenticated\") {\n            this.isLoadingDone = true;\n            this.resetLoginControls();\n            this.updateToastMessage(Constants.invalidLogin, Constants.error, \"Login\");\n          }\n        }, \n        (err) => {\n          if (err.status === 401) {\n            console.log(err);\n            this.isLoadingDone = true;\n            this.resetLoginControls();\n            this.updateToastMessage(Constants.invalidLogin, Constants.error, \"Login\");\n          }\n        }\n      );\n  }\n\n  resetLoginControls(){\n    this.loginForm.reset(); \n    this.submitted = false;\n  }\n}\n","<div class=\"container-fluid hide-override\">\r\n  <app-header-logo></app-header-logo>\r\n  <div class=\"login-form pad1em shadow font-family\">\r\n    <div *ngIf=\"!isLoadingDone\">\r\n      <p-progressSpinner class=\"loading\"></p-progressSpinner>\r\n    </div>\r\n    <div>\r\n      <div>Sign in to Adrobee</div>\r\n      <hr class=\"hr\" />\r\n    </div>\r\n    <br />\r\n    <div>\r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginFormSubmit()\" class=\"form-design\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Email</label><br />\r\n          <input type=\"text\" placeholder=\"Username\" formControlName=\"username\" class=\"form-control textbox\" />\r\n        </div>\r\n        <div *ngIf=\"submitted && getFormControls.username.errors\" class=\"error-message\">\r\n          <div *ngIf=\"getFormControls.username.errors.required\">\r\n            Username is required\r\n          </div>\r\n          <div *ngIf=\"getFormControls.username.errors.email\">\r\n            Email must be in format.\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group pad-top-1\">\r\n          <label for=\"password\">Password</label><br />\r\n          <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" class=\"form-control textbox\" />\r\n        </div>\r\n        <div *ngIf=\"submitted && getFormControls.password.errors\" class=\"error-message\">\r\n          <div *ngIf=\"getFormControls.password.errors.required\">\r\n            password is required\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button type=\"submit\" class=\"button button-color-orange\">Login</button>\r\n        </div>\r\n        <a routerLink=\"/forgetpassword\" class=\"color link\">Forget Password?</a>\r\n      </form>\r\n      <div style=\"margin-bottom: 1em;\">\r\n        <hr class=\"hr-underline\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"pad1em absolute-center font-family\">\r\n    <a class=\"policies link font-weight\" href=\"#\">Terms and Condition</a>\r\n    <a class=\"policies link font-weight\" href=\"#\">Privacy</a>\r\n    <a class=\"policies link font-weight\" href=\"#\">Contact Us</a>\r\n  </div>\r\n</div>\r\n","export class AssistantInformation {\r\n  ID: number;\r\n  MasterEmail: string;\r\n  UserName: string;\r\n  Password: string;\r\n  IsDashboard: boolean;\r\n  IsQuotation: boolean;\r\n  IsProduct: boolean;\r\n  IsSales: boolean;\r\n  IsReminder: boolean;\r\n  IsReports: boolean;\r\n  IsSettings: boolean;\r\n  IsInvoice: boolean;\r\n}\r\n","export class PersonalInformation {\r\n  Name: string;\r\n  Email: string;\r\n  Mobile: string;\r\n  Address: string;\r\n  GST: string;\r\n  Logo: File;\r\n  Company: String;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport { PersonalInformation } from '../models/personalinformation';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { Constants } from '../helpers/constant';\r\nimport { BaseComponent } from '../components/base/base.component';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.sass']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  personalinformationForm: FormGroup;\r\n  changePasswordForm: FormGroup;\r\n  errorMessage: string = '';\r\n  submitted: boolean = false;\r\n  changePasswordSubmitted: boolean = false;\r\n  isPasswordChanged: boolean = false;\r\n  isPasswordMatched: boolean = false;\r\n  selectedImage: File;\r\n  isProfileLoadDone: boolean = true;\r\n  logo:any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private profileService: ProfileService,\r\n    private authService: AuthenticationService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.personalinformationForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.email]],\r\n      mobile: ['', [Validators.required, Validators.min(10)]],\r\n      address: ['', Validators.required],\r\n      company: ['', Validators.required],\r\n      gst: [''],\r\n      logo: [''],\r\n    });\r\n\r\n    this.changePasswordForm = this.formBuilder.group({\r\n      password: ['', Validators.required],\r\n      cpassword: ['', Validators.required],\r\n      currentpassword: ['', Validators.required],\r\n    });\r\n    this.getProfileInfo();\r\n    this.disablePersonalInfoForm(true);\r\n  }\r\n\r\n  get getFormControls() {\r\n    return this.personalinformationForm.controls;\r\n  }\r\n\r\n  get getChangePasswordFormControls() {\r\n    return this.changePasswordForm.controls;\r\n  }\r\n\r\n  getProfileInfo() {\r\n    this.isProfileLoadDone = false;\r\n    const email = localStorage.getItem('email');\r\n    this.profileService\r\n      .getProfileInformation(email)\r\n      .subscribe((profileData) => {\r\n        this.isProfileLoadDone = true;\r\n        const controls = this.getFormControls;\r\n        controls['name'].setValue(profileData.Name);\r\n        controls['email'].setValue(profileData.Email);\r\n        controls['mobile'].setValue(profileData.Mobile);\r\n        controls['gst'].setValue(profileData.GST);\r\n        controls['address'].setValue(profileData.Address);\r\n        controls['company'].setValue(profileData.Company);\r\n\r\n        debugger;\r\n        // GET logo \r\n        this.profileService.getImage('test').subscribe(response => {\r\n           let reader = new FileReader();\r\n            reader.addEventListener(\"load\", () => {\r\n              this.logo = reader.result;\r\n            }, false);\r\n            if (response) {\r\n              reader.readAsDataURL(response);\r\n            }\r\n          // this.logo = response;\r\n        });\r\n\r\n      }),(err => {\r\n        if (err.staus === 401) {\r\n          console.log(err);\r\n          this.isProfileLoadDone = true;\r\n          this.errorMessage = Constants.invalidEmail;\r\n        }\r\n      }); \r\n  }\r\n\r\n  personalInfoFormSubmit() {\r\n    this.submitted = true;\r\n    this.isProfileLoadDone = false;\r\n    if (this.personalinformationForm.invalid) {\r\n      this.isProfileLoadDone = true;\r\n      return;\r\n    }\r\n\r\n    let profile = new PersonalInformation();\r\n    const controls = this.getFormControls;\r\n\r\n    profile.Name = controls['name'].value;\r\n    profile.Email = controls['email'].value;\r\n    profile.Mobile = controls['mobile'].value;\r\n    profile.Address = controls['address'].value;\r\n    profile.GST = controls['gst'].value;\r\n    profile.Company = controls['company'].value;\r\n\r\n    this.profileService\r\n      .updateProfileInformation(profile)\r\n      .subscribe((updatedResponse) => {\r\n        this.updateToastMessage('Profile Updated successfully', \"success\", \"Personal Information\");\r\n        this.disablePersonalInfoForm(true);\r\n        this.isProfileLoadDone = true;\r\n      }),(err => { console.log(err);\r\n        this.updateToastMessage('Something Went Wrong. Try again later', \"error\", \"Personal Information\");\r\n      });\r\n  }\r\n\r\n  changePasswordFormSubmit() {\r\n    this.changePasswordSubmitted = true;\r\n    this.isProfileLoadDone = false;\r\n    if (this.changePasswordForm.invalid) {\r\n      this.isProfileLoadDone = true;\r\n      return;\r\n    }\r\n    const currentPassword = this.getChangePasswordFormControls[\r\n      'currentpassword'\r\n    ].value;\r\n    const newPassword = this.getChangePasswordFormControls['cpassword'].value;\r\n    const confirmPassword = this.getChangePasswordFormControls['password']\r\n      .value;\r\n\r\n    if (newPassword === confirmPassword) {\r\n      this.profileService\r\n        .updatePassword(currentPassword, newPassword)\r\n        .subscribe((res) => {\r\n          if (res === 'Success') {\r\n            this.resetPasswordControls();\r\n            this.isProfileLoadDone = true;\r\n            this.updateToastMessage('Password Updated successfully.', Constants.success, \"Change Password\");\r\n            setTimeout(() => {\r\n              this.authService.logout();\r\n            }, 2000)\r\n          }\r\n        }),(err => { console.log(err);});\r\n    } else {\r\n      this.isProfileLoadDone = true;\r\n      this.updateToastMessage('Both Passwords Must Match.', Constants.error, \"Change Password\");\r\n    }\r\n  }\r\n\r\n  resetPasswordControls() {\r\n    let controls = this.getChangePasswordFormControls;\r\n    controls['cpassword'].setValue('');\r\n    controls['password'].setValue('');\r\n    controls['currentpassword'].setValue('');\r\n  }\r\n\r\n  disablePersonalInfoForm(isDisabled: boolean) {\r\n    let controls = this.getFormControls;\r\n    let btnControl = document.getElementById('btnSaveProfrofile');\r\n    if (isDisabled) {\r\n      controls['name'].disable();\r\n      controls['mobile'].disable();\r\n      controls['gst'].disable();\r\n      controls['address'].disable();\r\n      controls['logo'].disable();\r\n      controls['company'].disable();\r\n      btnControl.setAttribute('disabled', 'true');\r\n    } else {\r\n      controls['name'].enable();\r\n      controls['mobile'].enable();\r\n      controls['gst'].enable();\r\n      controls['address'].enable();\r\n      controls['logo'].enable();\r\n      controls['company'].enable();\r\n      btnControl.removeAttribute('disabled');\r\n    }\r\n  }\r\n\r\n  // explandPersonalInfoBar() {\r\n  //   let expansionElement: HTMLElement = document.getElementById(\r\n  //     'expansion-bar'\r\n  //   ) as HTMLElement;\r\n  //   expansionElement.click();\r\n  // }\r\n\r\n  onFileChanged(files) {\r\n    if (files.length === 0){\r\n      this.updateToastMessage(\"Select a File First.\", Constants.error, \"Upload Image\");\r\n      return; \r\n    }\r\n\r\n    var mimeType = files[0].type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      this.updateToastMessage(\"Only JPG images are support\", Constants.error, \"Upload Image\");\r\n        return;\r\n    }\r\n \r\n    var reader = new FileReader();\r\n    reader.readAsDataURL(files[0]); \r\n    reader.onload = (_event) => { \r\n      this.logo = reader.result; \r\n    }\r\n  }\r\n\r\n  uploadImage() {\r\n    debugger;\r\n    this.isProfileLoadDone = false;\r\n\r\n    this.profileService.uploadImage(this.logo).subscribe(\r\n      (res) => {\r\n        console.log(res);\r\n        this.isProfileLoadDone = true;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.isProfileLoadDone = true;\r\n      }\r\n    ),(err => { console.log(err);});\r\n  }\r\n\r\n  updateToastMessage(msg, severity, title){\r\n      this.messageService.clear();\r\n      this.messageService.add({severity:severity, summary:title, detail:msg});\r\n    }\r\n}\r\n","<div class=\"margin-top margin-left margin-right margin-bottom\">\r\n  <div *ngIf=\"!isProfileLoadDone\">\r\n    <p-progressSpinner class=\"loading\"></p-progressSpinner>\r\n  </div>\r\n  <p-fieldset legend=\"Personal Information\" [toggleable]=\"true\" styleClass=\"fieldset-title\">\r\n    <section id=\"personalinformationsection\">\r\n      <div class=\"profile-title\">\r\n        <div class=\"float-right\">\r\n          <span class=\"cursor-pointer edit-button\" (click)=\"disablePersonalInfoForm(false)\">\r\n            <img class=\"icon-width\" src=\"../../assets/icons/edit.png\" alt=\"\" srcset=\"\" />\r\n            Edit Details\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div style=\"width: 100%;\">\r\n        <form [formGroup]=\"personalinformationForm\" (ngSubmit)=\"personalInfoFormSubmit()\" class=\"form-design center\">\r\n          <div style=\"width: 100%;\">\r\n            <div class=\"float-left left-form\">\r\n              <img [src]=\"logo\" height=\"200\" *ngIf=\"logo\">\r\n              <div class=\"form-group\">\r\n                <label for=\"password\" class=\"label-design\">Logo</label><br />\r\n                <input #file type=\"file\" accept=\"image/jpeg\" (change)=\"onFileChanged(file.files)\" />\r\n              </div>\r\n              <button  type=\"\" class=\"button float-right\" (click)=\"uploadImage()\">\r\n                upload\r\n              </button>\r\n            </div>\r\n            <div class=\"float-right right-form\">\r\n              <div class=\"form-group\">\r\n                <label for=\"username\" class=\"label-design\">Name</label>\r\n                <input type=\"text\" placeholder=\"Name\" formControlName=\"name\" class=\"form-control textbox\" />\r\n              </div>\r\n              <div *ngIf=\"submitted && getFormControls.name.errors\" class=\"error-message\">\r\n                <div *ngIf=\"getFormControls.name.errors.required\">\r\n                  name is required\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"password\" class=\"label-design\">Email</label><br />\r\n                <input type=\"email\" placeholder=\"Email\" formControlName=\"email\" class=\"form-control textbox\" disabled=\"true\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"password\" class=\"label-design\">Mobile</label>\r\n                <input type=\"text\" placeholder=\"Mobile Number\" formControlName=\"mobile\" maxlength=\"10\" class=\"form-control textbox\" />\r\n              </div>\r\n              <div *ngIf=\"submitted && getFormControls.mobile.errors\" class=\"error-message\">\r\n                <div *ngIf=\"getFormControls.mobile.errors.required\">\r\n                  Mobile number is required\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"CompanyName\" class=\"label-design\">Company Name</label>\r\n                <input type=\"text\" placeholder=\"Company Name\" formControlName=\"company\" maxlength=\"20\" class=\"form-control textbox\" />\r\n              </div>\r\n              <div *ngIf=\"submitted && getFormControls.company.errors\" class=\"error-message\">\r\n                <div *ngIf=\"getFormControls.company.errors.required\">\r\n                  Company Name is required\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"address\" class=\"label-design\">Address</label>\r\n                <textarea name=\"address\" id=\"address\" cols=\"5\" rows=\"8\" placeholder=\"Address\" formControlName=\"address\" class=\"form-control textbox\"></textarea>\r\n              </div>\r\n              <div *ngIf=\"submitted && getFormControls.address.errors\" class=\"error-message\">\r\n                <div *ngIf=\"getFormControls.address.errors.required\">\r\n                  address is required\r\n                </div>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"password\" class=\"label-design\">GST</label>\r\n                <input type=\"text\" placeholder=\"GST Number\" formControlName=\"gst\" class=\"form-control textbox\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"button float-right\" id=\"btnSaveProfrofile\">\r\n                  Save Profile\r\n                </button>\r\n              </div>\r\n              <div class=\"error-message\">{{ errorMessage }}</div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  </p-fieldset>\r\n  <div class=\"margin-top margin-bottom \">\r\n    <p-fieldset legend=\"Change Password\" [toggleable]=\"true\">\r\n      <section id=\"changepasswordsection\">\r\n        <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"changePasswordFormSubmit()\" class=\"form-design left-form\">\r\n          <div class=\"form-group\">\r\n            <label for=\"password\" class=\"label-design\">Current Password</label>\r\n            <input type=\"password\" placeholder=\"Password\" formControlName=\"currentpassword\" class=\"form-control textbox\" />\r\n          </div>\r\n          <div *ngIf=\"\r\n                changePasswordSubmitted &&\r\n                getChangePasswordFormControls.currentpassword.errors\r\n              \" class=\"error-message\">\r\n            <div *ngIf=\"\r\n                  getChangePasswordFormControls.currentpassword.errors.required\r\n                \">\r\n              Current Password is required\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\" class=\"label-design\">New Password</label>\r\n            <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" class=\"form-control textbox\" />\r\n          </div>\r\n          <div *ngIf=\"\r\n                changePasswordSubmitted &&\r\n                getChangePasswordFormControls.password.errors\r\n              \" class=\"error-message\">\r\n            <div *ngIf=\"getChangePasswordFormControls.password.errors.required\">\r\n              Password is required\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\" class=\"label-design\">Confirm New Password</label>\r\n            <input type=\"password\" placeholder=\"Confirm Password\" formControlName=\"cpassword\" class=\"form-control textbox\" />\r\n          </div>\r\n          <div *ngIf=\"\r\n                changePasswordSubmitted &&\r\n                getChangePasswordFormControls.cpassword.errors\r\n              \" class=\"error-message\">\r\n            <div *ngIf=\"getChangePasswordFormControls.cpassword.errors.required\">\r\n              Confirm Password is required\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <button type=\"submit\" class=\"button float-right\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </p-fieldset>\r\n  </div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { UrlMappers } from '../helpers/urlmappers';\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  // getToken(username: string, password: string): Observable<any> {\r\n  //   const url =\r\n  //     UrlMappers.encodeUrl + '?name1=' + username + '&name2=' + password;\r\n  //   return this.http.get<string>(url).pipe(\r\n  //     map((a) => {\r\n  //       return a;\r\n  //     }),\r\n  //     catchError((err) => {\r\n  //       throw err;\r\n  //     })\r\n  //   );\r\n  // }\r\n\r\n  login(username:string, password:string): Observable<any> {\r\n    debugger;\r\n    const loginurl = UrlMappers.loginUrl;\r\n    const content = {\r\n      \"username\":username,\r\n      \"password\": password\r\n    };\r\n    return this.http\r\n      .post<any>(loginurl, content)\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        }),\r\n        catchError((e) => {\r\n          console.log(e);\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n\r\n  public get getLoggedInStatus() {\r\n    return localStorage.getItem('email') !== null ? true : false;\r\n  }\r\n\r\n  forgetPassword(email: string): Observable<string> {\r\n    const url = UrlMappers.forgetPassword + '?Email=' + email;\r\n    return this.http\r\n      .post<string>(url, '')\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        }),\r\n        catchError((e) => {\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry, map } from 'rxjs/operators';\r\nimport { PersonalInformation } from '../models/personalinformation';\r\nimport { AssistantInformation } from '../models/assistantinformation';\r\nimport { UrlMappers } from '../helpers/urlmappers';\r\n\r\n@Injectable()\r\nexport class ProfileService {\r\n  static headers: any = {\r\n    Authorization: 'Basic ' + localStorage.getItem('token'),\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProfileInformation(email: string): Observable<PersonalInformation> {\r\n    const url = UrlMappers.getProfile + '?emailid=' + email;\r\n    return this.http\r\n      .get<PersonalInformation>(url, { headers: ProfileService.headers })\r\n      .pipe(\r\n        map((profile) => {\r\n          return profile;\r\n        }),\r\n        catchError((err) => {\r\n          throw err;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateProfileInformation(\r\n    profileData: PersonalInformation\r\n  ): Observable<PersonalInformation> {\r\n    const url =\r\n      UrlMappers.updateProfile +\r\n      '?Name=' +\r\n      profileData.Name +\r\n      '&Mobile=' +\r\n      profileData.Mobile +\r\n      '&Email=' +\r\n      profileData.Email +\r\n      '&Address=' +\r\n      profileData.Address +\r\n      '&GST=' +\r\n      profileData.GST +\r\n      '&Company=' +\r\n      profileData.Company;\r\n\r\n    return this.http\r\n      .post<PersonalInformation>(url, '', { headers: ProfileService.headers })\r\n      .pipe(\r\n        map((response) => {\r\n          return response;\r\n        }),\r\n        catchError((e) => {\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n\r\n  updatePassword(oldPassword: string, newPassword: string): Observable<string> {\r\n    const url =\r\n      UrlMappers.resetPasswordUrl +\r\n      '?Email=' +\r\n      localStorage.getItem('email') +\r\n      '&Password=' +\r\n      oldPassword +\r\n      '&Temp=' +\r\n      newPassword;\r\n\r\n    return this.http\r\n      .post<string>(url, '', { headers: ProfileService.headers })\r\n      .pipe(\r\n        map((a) => {\r\n          return a;\r\n        }),\r\n        catchError((e) => {\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAssistantInformation(\r\n    email: string\r\n  ): Observable<Array<AssistantInformation>> {\r\n    const url = UrlMappers.getAssistantProfile + '?email=' + email;\r\n    return this.http\r\n      .get<Array<AssistantInformation>>(url, {\r\n        headers: ProfileService.headers,\r\n      })\r\n      .pipe(\r\n        map((a) => {\r\n          return a;\r\n        }),\r\n        catchError((e) => {\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n\r\n  addAssistantInformation(asstInfo: AssistantInformation): Observable<any> {\r\n    const url =\r\n      UrlMappers.addAssistantProfile +\r\n      '?MasterEmail=' +\r\n      asstInfo.MasterEmail +\r\n      '&Password=' +\r\n      asstInfo.Password +\r\n      '&IsDashboard=' +\r\n      asstInfo.IsDashboard +\r\n      '&UserName=' +\r\n      asstInfo.UserName +\r\n      '&IsQuotation=' +\r\n      asstInfo.IsQuotation +\r\n      '&IsProduct=' +\r\n      asstInfo.IsProduct +\r\n      '&IsSales=' +\r\n      asstInfo.IsSales +\r\n      '&IsReminder=' +\r\n      asstInfo.IsReminder +\r\n      '&IsReports=' +\r\n      asstInfo.IsReports +\r\n      '&IsSettings=' +\r\n      asstInfo.IsSettings +\r\n      '&IsInvoice=' +\r\n      asstInfo.IsInvoice;\r\n\r\n    return this.http\r\n      .post<AssistantInformation>(url, '', { headers: ProfileService.headers })\r\n      .pipe(\r\n        map((a) => {\r\n          return a;\r\n        }),\r\n        catchError((e) => {\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteAssistantRecord(id: number): Observable<string> {\r\n    const url = UrlMappers.deleteSlaveDetails + '?id=' + id;\r\n    return this.http\r\n      .post<string>(url, '', { headers: ProfileService.headers })\r\n      .pipe(\r\n        map((a) => {\r\n          return a;\r\n        }),\r\n        catchError((e) => {\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAssistantRecordById(id: number): Observable<AssistantInformation> {\r\n    const url = UrlMappers.getAssistantProfileById + '?id=' + id;\r\n    return this.http\r\n      .get<AssistantInformation>(url, { headers: ProfileService.headers })\r\n      .pipe(\r\n        map((a) => {\r\n          return a;\r\n        }),\r\n        catchError((e) => {\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n\r\n  updateAssistantRecordById(asstDetails: AssistantInformation) {\r\n    const url =\r\n      UrlMappers.updateAssistantProfile +\r\n      '?id=' +\r\n      asstDetails.ID +\r\n      '&MasterEmail=' +\r\n      asstDetails.MasterEmail +\r\n      '&Password=' +\r\n      asstDetails.Password +\r\n      '&IsDashboard=' +\r\n      asstDetails.IsDashboard +\r\n      '&UserName=' +\r\n      asstDetails.UserName +\r\n      '&IsQuotation=' +\r\n      asstDetails.IsQuotation +\r\n      '&IsProduct=' +\r\n      asstDetails.IsProduct +\r\n      '&IsSales=' +\r\n      asstDetails.IsSales +\r\n      '&IsReminder=' +\r\n      asstDetails.IsReminder +\r\n      '&IsReports=' +\r\n      asstDetails.IsReports +\r\n      '&IsSettings=' +\r\n      asstDetails.IsSettings +\r\n      '&IsInvoice=' +\r\n      asstDetails.IsInvoice;\r\n\r\n    return this.http\r\n      .post<AssistantInformation>(url, '', { headers: ProfileService.headers })\r\n      .pipe(\r\n        map((a) => {\r\n          return a;\r\n        }),\r\n        catchError((e) => {\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n\r\n  uploadImage(imageFile): Observable<any> {\r\n    debugger;\r\n    const url = UrlMappers.uploadImage;\r\n    \r\n    return this.http\r\n      .post<File>('./assets/images/logo', imageFile)\r\n      .pipe(\r\n        map((a) => {\r\n          return a;\r\n        }),\r\n        catchError((e) => {\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n\r\n  getImage(imageName){\r\n    debugger;\r\n    const url = UrlMappers.downloadImage+'?imagename='+'download.jpg';\r\n    return this.http\r\n      .post<any>(url, '', { headers: ProfileService.headers, responseType: 'blob' as 'json'})\r\n      .pipe(\r\n        map((a) => {\r\n          return a;\r\n        }),\r\n        catchError((e) => {\r\n          throw e;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport  { UrlMappers } from '../helpers/urlmappers';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.sass'],\n})\nexport class SidebarComponent implements OnInit {\n  componentToLoad: string = '';\n  username: string = '';\n  companyName: string = '';\n  constructor(private authServices: AuthenticationService) {}\n\n  ngOnInit(): void {\n    this.componentToLoad = 'dashboard';\n    this.username = localStorage.getItem('name');\n    this.companyName = localStorage.getItem('companyname');\n  }\n\n  componentSelector(selectedComponent) {\n    if (selectedComponent === 'profile') {\n      this.componentToLoad = 'profile';\n    } else if (selectedComponent === 'dashboard') {\n      this.componentToLoad = 'dashboard';\n    } else if(selectedComponent === 'assistant'){\n      this.componentToLoad = 'assistant';\n    }\n  }\n\n  logout() {\n    this.authServices.logout();\n  }\n}\n","<div style=\"width: 100%;\">\r\n  <div class=\"float-left\" style=\"width: 14%; position: fixed;\">\r\n    <img\r\n      class=\"logo\"\r\n      src=\"./assets/images/app_logo.png\"\r\n      alt=\"logo\"\r\n      srcset=\"\"\r\n    />\r\n    <div class=\"sidebar-design pad1em\">\r\n      <div class=\"menu-design\">\r\n        <a class=\"menu-link menu\" (click)=\"componentSelector('dashboard')\">\r\n          <img\r\n            class=\"menu-icon\"\r\n            src=\"./assets/icons/dashboard.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />Dashboard\r\n        </a>\r\n      </div>\r\n      <div class=\"menu-design\">\r\n        <a class=\"menu-link menu\" (click)=\"componentSelector('products')\">\r\n          <img\r\n            class=\"menu-icon\"\r\n            src=\"./assets/icons/product.png\"\r\n            alt=\"\"\r\n            srcset=\"\"/>Products\r\n          </a>\r\n      </div>\r\n      <div class=\"menu-design\">\r\n        <a class=\"menu-link menu\" (click)=\"componentSelector('sales')\">\r\n          <img\r\n            class=\"menu-icon\"\r\n            src=\"./assets/icons/sales.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />Sales</a\r\n        >\r\n      </div>\r\n      <div class=\"menu-design\">\r\n        <a class=\"menu-link menu\" (click)=\"componentSelector('reports')\"\r\n          ><img\r\n            class=\"menu-icon\"\r\n            src=\"./assets/icons/report.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />Reports</a\r\n        >\r\n      </div>\r\n      <div class=\"menu-design\">\r\n        <a class=\"menu-link menu\" (click)=\"componentSelector('quotation')\"\r\n          ><img\r\n            class=\"menu-icon\"\r\n            src=\"./assets/icons/quotation.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />Quotation</a\r\n        >\r\n      </div>\r\n      <div class=\"menu-design\">\r\n        <a class=\"menu-link menu\" (click)=\"componentSelector('invoice')\"\r\n          ><img\r\n            class=\"menu-icon\"\r\n            src=\"./assets/icons/invoice.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />Invoice</a\r\n        >\r\n      </div>\r\n      <div class=\"menu-design\">\r\n        <a class=\"menu-link menu\" (click)=\"componentSelector('profile')\"\r\n          ><img\r\n            class=\"menu-icon\"\r\n            src=\"./assets/icons/profile.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />Profile</a\r\n        >\r\n      </div>\r\n      <div class=\"menu-design\">\r\n        <a class=\"menu-link menu\" (click)=\"componentSelector('assistant')\"\r\n          ><img\r\n            class=\"menu-icon\"\r\n            src=\"./assets/icons/user-management.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />Assistants</a\r\n        >\r\n      </div>\r\n      <div class=\"menu-design\">\r\n        <a class=\"menu-link menu\" (click)=\"componentSelector('reminder')\"\r\n          ><img\r\n            class=\"menu-icon\"\r\n            src=\"./assets/icons/reminder.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />Reminder</a\r\n        >\r\n      </div>\r\n      <div class=\"menu-design\">\r\n        <a class=\"menu-link menu\" (click)=\"componentSelector('settings')\"\r\n          ><img\r\n            class=\"menu-icon\"\r\n            src=\"./assets/icons/settins.png\"\r\n            alt=\"\"\r\n            srcset=\"\"\r\n          />Settings</a\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"float-right\" style=\"width: 86%; display: grid;\">\r\n    <div class=\"orange-bg\">\r\n      <!-- <img\r\n        class=\"logo-img-design float-left\"\r\n        src=\"../../assets/images/logo.jpg\"\r\n        alt=\"adrobee logo\"\r\n      /> -->\r\n      <div class=\"margin-top-1\">\r\n        <span class=\"margin-left company-name color\">{{ companyName }}</span>\r\n        <br />\r\n        <span class=\"margin-custom-left color\">{{ username }}</span>\r\n      </div>\r\n\r\n      <a class=\"logout float-right color\" (click)=\"logout()\">Logout</a>\r\n    </div>\r\n    \r\n    <div>\r\n      <!-- \r\n      Content of the other components based on the user selection.  \r\n      Need to find the best way to do so.\r\n    -->\r\n\r\n      <div *ngIf=\"componentToLoad === 'profile'\">\r\n        <app-profile class=\"margin-left\"></app-profile>\r\n      </div>\r\n      <div *ngIf=\"componentToLoad === 'dashboard'\">\r\n        <app-dashboard class=\"margin-left\"></app-dashboard>\r\n      </div>\r\n      <div *ngIf=\"componentToLoad === 'assistant'\">\r\n        <app-usermanagement></app-usermanagement>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Inject, Component, Input, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ProfileService } from '../services/profile.service';\r\nimport { AssistantInformation } from '../models/assistantinformation';\r\n\r\n@Component({\r\n  selector: 'dialog-overview-example-dialog',\r\n  templateUrl: './assitant.modaltemplate.component.html',\r\n  styleUrls: ['./usermanagement.component.sass'],\r\n})\r\nexport class DialogOverviewExampleDialog {\r\n  assistantForm: FormGroup;\r\n  assistantFormSubmitted: boolean = false;\r\n  selectedFeatures: Array<string> = [];\r\n  ischkBoxError: boolean = false;\r\n\r\n  @Input('isEdit')\r\n  isEdit: boolean = false;\r\n  @Input('title')\r\n  title: string = '';\r\n  @Input('selectedRecordId')\r\n  selectedRecordId:number;\r\n  @Output('emitData')\r\n  emitData = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.assistantForm = this.initAssistantFormControls();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.getAssistantRecordById(this.selectedRecordId);\r\n  }\r\n\r\n  initAssistantFormControls() {\r\n    return this.formBuilder.group({\r\n      asstusername: ['', [Validators.required, Validators.email]],\r\n      asstpassword: ['', Validators.required],\r\n      dashboard: [false, Validators.requiredTrue],\r\n      product: [false, Validators.requiredTrue],\r\n      sales: [false, Validators.requiredTrue],\r\n      reports: [false, Validators.requiredTrue],\r\n      quotation: [false, Validators.requiredTrue],\r\n      invoice: [false, Validators.requiredTrue],\r\n      reminder: [false, Validators.requiredTrue],\r\n      settings: [false, Validators.requiredTrue],\r\n    });\r\n  }\r\n\r\n  get getAssistantFormControls() {\r\n    return this.assistantForm.controls;\r\n  }\r\n\r\n  assistantFormSubmit() {\r\n    this.assistantFormSubmitted = true;\r\n    if (this.selectedFeatures.length === 0) {\r\n      this.ischkBoxError = true;\r\n      setTimeout(() => {\r\n        this.ischkBoxError = false;\r\n      }, 2000);\r\n    } else {\r\n      const asstProfile = new AssistantInformation();\r\n      const asstControl = this.getAssistantFormControls;\r\n      asstProfile.MasterEmail = localStorage.getItem('email');\r\n      asstProfile.UserName = asstControl['asstusername'].value;\r\n      asstProfile.Password = asstControl['asstpassword'].value;\r\n\r\n      if (this.selectedFeatures.indexOf('dashboard') !== -1)\r\n        asstProfile.IsDashboard = true;\r\n      else asstProfile.IsDashboard = false;\r\n      if (this.selectedFeatures.indexOf('product') !== -1)\r\n        asstProfile.IsProduct = true;\r\n      else asstProfile.IsProduct = false;\r\n      if (this.selectedFeatures.indexOf('sales') !== -1)\r\n        asstProfile.IsSales = true;\r\n      else asstProfile.IsSales = false;\r\n      if (this.selectedFeatures.indexOf('reports') !== -1)\r\n        asstProfile.IsReports = true;\r\n      else asstProfile.IsReports = false;\r\n      if (this.selectedFeatures.indexOf('quotation') !== -1)\r\n        asstProfile.IsQuotation = true;\r\n      else asstProfile.IsQuotation = false;\r\n      if (this.selectedFeatures.indexOf('invoice') !== -1)\r\n        asstProfile.IsInvoice = true;\r\n      else asstProfile.IsInvoice = false;\r\n      if (this.selectedFeatures.indexOf('reminder') !== -1)\r\n        asstProfile.IsReminder = true;\r\n      else asstProfile.IsReminder = false;\r\n      if (this.selectedFeatures.indexOf('settings') !== -1)\r\n        asstProfile.IsSettings = true;\r\n      else asstProfile.IsSettings = false;\r\n\r\n      this.profileService\r\n        .addAssistantInformation(asstProfile)\r\n        .subscribe((response) => {\r\n          if (response != null) {\r\n\r\n            this.emitData.emit(\"success\");\r\n          }\r\n        }), (err => {\r\n          this.emitData.emit(\"error\");\r\n        });\r\n      this.resetFormControls();\r\n    }\r\n  }\r\n\r\n  resetFormControls() {\r\n    this.assistantForm.reset();\r\n    this.assistantFormSubmitted = false;\r\n  }\r\n\r\n  onCheckboxChange(event) {\r\n    event.preventDefault();\r\n    if (event.target.checked) {\r\n      if (!this.selectedFeatures.includes(event.target.value))\r\n        this.selectedFeatures.push(event.target.value);\r\n    } else {\r\n      if (this.selectedFeatures.includes(event.target.value)) {\r\n        const index: number = this.selectedFeatures.indexOf(event.target.value);\r\n        if (index !== -1) {\r\n          this.selectedFeatures.splice(index, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getAssistantRecordById(id:number): void {\r\n    if(id > 0) {\r\n      this.resetFormControls();\r\n      this.profileService\r\n      .getAssistantRecordById(this.selectedRecordId)\r\n      .subscribe((assistInfo) => {\r\n        const controls = this.getAssistantFormControls;\r\n        controls['asstpassword'].setValue(assistInfo.Password);\r\n        controls['asstusername'].setValue(assistInfo.UserName);\r\n\r\n        if (assistInfo.IsDashboard) {\r\n          controls['dashboard'].setValue(true);\r\n          this.selectedFeatures.push('dashboard');\r\n        } else controls['dashboard'].setValue(false);\r\n\r\n        if (assistInfo.IsProduct) {\r\n          controls['product'].setValue(true);\r\n          this.selectedFeatures.push('product');\r\n        } else controls['product'].setValue(false);\r\n\r\n        if (assistInfo.IsSales) {\r\n          controls['sales'].setValue(true);\r\n          this.selectedFeatures.push('sales');\r\n        } else controls['sales'].setValue(false);\r\n\r\n        if (assistInfo.IsQuotation) {\r\n          controls['quotation'].setValue(true);\r\n          this.selectedFeatures.push('quotation');\r\n        } else controls['quotation'].setValue(false);\r\n\r\n        if (assistInfo.IsReports) {\r\n          controls['reports'].setValue(true);\r\n          this.selectedFeatures.push('reports');\r\n        } else controls['reports'].setValue(false);\r\n\r\n        if (assistInfo.IsInvoice) {\r\n          controls['invoice'].setValue(true);\r\n          this.selectedFeatures.push('invoice');\r\n        } else controls['invoice'].setValue(false);\r\n\r\n        if (assistInfo.IsReminder) {\r\n          controls['reminder'].setValue(true);\r\n          this.selectedFeatures.push('reminder');\r\n        } else controls['reminder'].setValue(false);\r\n\r\n        if (assistInfo.IsSettings) {\r\n          controls['settings'].setValue(true);\r\n          this.selectedFeatures.push('settings');\r\n        } else controls['settings'].setValue(false);\r\n      });\r\n    }\r\n  }\r\n\r\n  updateAssistantRecordById() {\r\n    const asstProfile = new AssistantInformation();\r\n    const asstControl = this.getAssistantFormControls;\r\n    asstProfile.ID = this.selectedRecordId;\r\n    asstProfile.MasterEmail = localStorage.getItem('email');\r\n    asstProfile.UserName = asstControl['asstusername'].value;\r\n    asstProfile.Password = asstControl['asstpassword'].value;\r\n\r\n    if (this.selectedFeatures.indexOf('dashboard') !== -1)\r\n      asstProfile.IsDashboard = true;\r\n    else asstProfile.IsDashboard = false;\r\n    if (this.selectedFeatures.indexOf('product') !== -1)\r\n      asstProfile.IsProduct = true;\r\n    else asstProfile.IsProduct = false;\r\n    if (this.selectedFeatures.indexOf('sales') !== -1)\r\n      asstProfile.IsSales = true;\r\n    else asstProfile.IsSales = false;\r\n    if (this.selectedFeatures.indexOf('reports') !== -1)\r\n      asstProfile.IsReports = true;\r\n    else asstProfile.IsReports = false;\r\n    if (this.selectedFeatures.indexOf('quotation') !== -1)\r\n      asstProfile.IsQuotation = true;\r\n    else asstProfile.IsQuotation = false;\r\n    if (this.selectedFeatures.indexOf('invoice') !== -1)\r\n      asstProfile.IsInvoice = true;\r\n    else asstProfile.IsInvoice = false;\r\n    if (this.selectedFeatures.indexOf('reminder') !== -1)\r\n      asstProfile.IsReminder = true;\r\n    else asstProfile.IsReminder = false;\r\n    if (this.selectedFeatures.indexOf('settings') !== -1)\r\n      asstProfile.IsSettings = true;\r\n    else asstProfile.IsSettings = false;\r\n\r\n    this.profileService\r\n      .updateAssistantRecordById(asstProfile)\r\n      .subscribe((a) => {\r\n        if (a != null) {\r\n          this.selectedRecordId = 0;\r\n          this.emitData.emit(\"success\");\r\n        }\r\n      }), (err => {\r\n        this.emitData.emit(\"error\");\r\n      });\r\n    this.resetFormControls();\r\n  }\r\n\r\n  closeModal() {\r\n    this.resetFormControls() ;\r\n    this.emitData.emit(\"close\");\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"grid-bg color pad1em\">{{title}}</div>\r\n  <section id=\"assistantsection\" class=\"margin-top\" style=\"margin-bottom: 1em;\">\r\n    <form [formGroup]=\"assistantForm\" class=\"form-design padding-left\">\r\n      <div class=\"width-100\">\r\n        <div class=\"float-left\" style=\"width: 41%;\">\r\n          <div class=\"form-group\">\r\n            <label for=\"username\" class=\"label-design\">Username</label>\r\n            <input type=\"email\" placeholder=\"Username\" formControlName=\"asstusername\" class=\"form-control textbox\" />\r\n          </div>\r\n          <div *ngIf=\"\r\n              assistantFormSubmitted &&\r\n              getAssistantFormControls.asstusername.errors\r\n            \" class=\"error-message\">\r\n            <div *ngIf=\"getAssistantFormControls.asstusername.errors.required\">\r\n              Username is required\r\n            </div>\r\n            <div *ngIf=\"getAssistantFormControls.asstusername.errors.email\">\r\n              Email must be in format.\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\" class=\"label-design\">Password</label>\r\n            <input type=\"password\" placeholder=\"Password\" formControlName=\"asstpassword\" class=\"form-control textbox\" />\r\n          </div>\r\n          <div *ngIf=\"\r\n              assistantFormSubmitted &&\r\n              getAssistantFormControls.asstpassword.errors\r\n            \" class=\"error-message\">\r\n            <div *ngIf=\"getAssistantFormControls.asstpassword.errors.required\">\r\n              Password is required\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"float-right width-50\">\r\n          <div>\r\n            <label for=\"features\" class=\"label-design\">Features</label>\r\n          </div>\r\n          <div class=\"pad-left-1 pad-right-1 width-100\">\r\n            <div class=\"float-left width-50\">\r\n              <div class=\"form-group\">\r\n                <input type=\"checkbox\" formControlName=\"dashboard\" class=\"form-control\" value=\"dashboard\" (change)=\"onCheckboxChange($event)\" />\r\n                <label for=\"\" class=\"label-design\">Dashboard</label>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <input type=\"checkbox\" formControlName=\"product\" class=\"form-control\" value=\"product\" (change)=\"onCheckboxChange($event)\" />\r\n                <label for=\"\" class=\"label-design\">Products</label>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <input type=\"checkbox\" formControlName=\"sales\" class=\"form-control\" value=\"sales\" (change)=\"onCheckboxChange($event)\" />\r\n                <label for=\"\" class=\"label-design\">Sales</label>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <input type=\"checkbox\" formControlName=\"reports\" class=\"form-control\" value=\"reports\" (change)=\"onCheckboxChange($event)\" />\r\n                <label for=\"\" class=\"label-design\">Reports</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"float-right width-50\">\r\n              <div class=\"form-group\">\r\n                <input type=\"checkbox\" formControlName=\"quotation\" class=\"form-control\" value=\"quotation\" (change)=\"onCheckboxChange($event)\" />\r\n                <label for=\"\" class=\"label-design\">Quotation</label>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <input type=\"checkbox\" formControlName=\"invoice\" class=\"form-control\" value=\"invoice\" (change)=\"onCheckboxChange($event)\" />\r\n                <label for=\"\" class=\"label-design\">Invoice</label>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <input type=\"checkbox\" formControlName=\"reminder\" class=\"form-control\" value=\"reminder\" (change)=\"onCheckboxChange($event)\" />\r\n                <label for=\"\" class=\"label-design\">Reminder</label>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <input type=\"checkbox\" formControlName=\"settings\" class=\"form-control\" value=\"settings\" (change)=\"onCheckboxChange($event)\" />\r\n                <label for=\"\" class=\"label-design\">Settings</label>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <button *ngIf=\"!isEdit\" class=\"button\" (click)=\"assistantFormSubmit()\">\r\n                  Save\r\n                </button>\r\n                <button *ngIf=\"isEdit\" class=\"button margin-left\" (click)=\"updateAssistantRecordById()\">\r\n                  Update\r\n                </button>\r\n                <button class=\"button margin-left\" (click)=\"closeModal()\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"assistantFormSubmitted && ischkBoxError\" class=\"error-message\">\r\n            Ateast select one feature to submit.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </section>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { DialogOverviewExampleDialog } from './assistant.modal.component';\nimport { ProfileService } from '../services/profile.service';\nimport { AssistantInformation } from '../models/assistantinformation';\nimport { Constants } from '../helpers/constant';\nimport { MessageService } from 'primeng/api';\nimport { BaseComponent } from '../components/base/base.component';\n\n@Component({\n  selector: 'app-usermanagement',\n  templateUrl: './usermanagement.component.html',\n  styleUrls: ['./usermanagement.component.sass'],\n})\nexport class UsermanagementComponent extends BaseComponent implements OnInit {\n  gridDatas: Array<AssistantInformation> = [];\n  isLoadingDone: boolean = true;\n  loadModal:boolean = false;\n  selectedRecordId:number;\n  loadAddEditModal:boolean = false;\n  dialog_title: string = '';\n  isEdit:boolean = false;\n\n  constructor(\n    private profileService: ProfileService,\n    public messageService: MessageService\n  ) {\n    super(messageService);\n  }\n\n  ngOnInit(): void {\n    this.getAsstProfileInfo();\n  }\n\n  openDialog(): void {\n    this.dialog_title = \"Add Assistant Information\";\n    this.loadAddEditModal = true;\n    this.selectedRecordId = 0;\n    this.isEdit = false;\n  }\n\n  getAsstProfileInfo() {\n    this.isLoadingDone = true;\n    const masterEmail = localStorage.getItem('email');\n    this.profileService\n      .getAssistantInformation(masterEmail)\n      .subscribe((asstinfo) => {\n        this.gridDatas = asstinfo;\n        this.isLoadingDone = false;\n      });\n  }\n\n  deleteAssistant(id) {\n    this.selectedRecordId = id;\n    this.loadModal = true; \n  }\n\n  dialogButtonClickEvent(selectedButton) {\n    if(selectedButton === 'yes'){\n      if(this.selectedRecordId !== 0) {\n        this.profileService.deleteAssistantRecord(this.selectedRecordId).subscribe((res) => {\n          if (res === 'Slave Information Deleted Successfully') {\n             this.getAsstProfileInfo();\n             this.selectedRecordId = 0;\n             this.loadModal = false;\n             this.updateToastMessage(Constants.genericMessage, Constants.success, \"Assistant Information\");\n           }\n        });\n      }\n    } else { this.loadModal = false;}\n  }\n\n  handleSureDialogResult($event) {\n    if($event == 'close'){\n      this.loadAddEditModal = false;\n    } else if($event == 'success'){\n      this.loadAddEditModal = false;\n      this.updateToastMessage(Constants.genericMessage, Constants.success, \"Assistant Information\");\n    } else { \n        this.loadAddEditModal = false;\n        this.updateToastMessage(Constants.serverSideErrr, Constants.error, \"Assistant Information\");\n    }\n  }\n\n  editAssistant(id) {\n    this.dialog_title = \"Edit Assistant Information\";\n    this.loadAddEditModal = true;\n    this.isEdit = true;\n    this.selectedRecordId = id;\n  }\n}\n","<div class=\"margin-left font-family\">\n  <p-table [value]=\"gridDatas\" dataKey=\"id\" styleClass=\"ui-table-customers\" [rowHover]=\"true\" [rows]=\"15\" [showCurrentPageReport]=\"true\" [rowsPerPageOptions]=\"[15,25,50]\" [loading]=\"isLoadingDone\" [paginator]=\"true\" currentPageReportTemplate=\"\" [filterDelay]=\"0\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\">\n    <ng-template pTemplate=\"caption\">\n      <div class=\"float-right\">\n        <div class=\"margin-bottom margin-top\">\n          <span class=\"edit-button margin-right cursor-pointer\" (click)=\"openDialog()\">\n            Add Assistant</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template pTemplate=\"header\" class=\"table-width\">\n      <tr>\n        <th pSortableColumn=\"UserName\">Username\n          <p-sortIcon field=\"Username\"></p-sortIcon>\n        </th>\n        <th>Password</th>\n        <th class=\"th-width\">Dashboard</th>\n        <!-- <th class=\"th-width\">Product</th> -->\n        <th class=\"th-width\">Sales</th>\n        <th class=\"th-width\">Quotation</th>\n        <th class=\"th-width\">Settings</th>\n        <th class=\"th-width\">Invoice</th>\n        <th class=\"th-width\">Reminder</th>\n        <th class=\"th-width\">Reports</th>\n        <th class=\"th-icon-width\"></th>\n        <th class=\"th-icon-width\"></th>\n      </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-data>\n      <tr class=\"ui-selectable-row\">\n        <td>{{ data.UserName }}</td>\n        <td>{{ data.Password }}</td>\n        <td>{{ data.IsDashboard }}</td>\n        <!-- <td>{{ data.IsProduct }}</td> -->\n        <td>{{ data.IsSales }}</td>\n        <td>{{ data.IsQuotation }}</td>\n        <td>{{ data.IsSettings }}</td>\n        <td>{{ data.IsInvoice }}</td>\n        <td>{{ data.IsReminder }}</td>\n        <td>{{ data.IsReports }}</td>\n        <td>\n          <img src=\"./assets/icons/edit_black.png\" class=\"icon-width\" title=\"Edit Record\" srcset=\"\" (click)=\"editAssistant(data.ID)\" />\n        </td>\n        <td>\n          <img src=\"./assets/icons/delete_black.png\" class=\"icon-width\" title=\"Delete Record\" (click)=\"deleteAssistant(data.ID)\" />\n        </td>\n      </tr>\n    </ng-template>\n  </p-table>\n  <!-- delete sure dialog starts -->\n  <p-sidebar [style]=\"{height: '185px'}\" [(visible)]=\"loadModal\" position=\"bottom\" [baseZIndex]=\"10000\">\n    <h1 style=\"font-weight:normal\">Are you sure to delete the record?</h1>\n    <div>\n      <button pButton type=\"button\" (click)=\"dialogButtonClickEvent('yes')\" class=\"button\">Yes</button>\n      <button pButton type=\"button\" (click)=\"dialogButtonClickEvent('no')\" class=\"button\">No</button>\n    </div>\n  </p-sidebar>\n  <!-- delete sure dialog end -->\n  <!-- add / edit assistant information -->\n  <p-sidebar [style]=\"{height: '70%'}\" [(visible)]=\"loadAddEditModal\" position=\"bottom\" [baseZIndex]=\"10000\">\n    <dialog-overview-example-dialog [title]='dialog_title' [isEdit]=\"isEdit\" [selectedRecordId]=\"selectedRecordId\" (emitData)=\"handleSureDialogResult($event)\">\n    </dialog-overview-example-dialog>\n  </p-sidebar>\n  <!-- delete sure dialog end -->\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseurl: 'http://localhost:8000',\n  forgetpassu: 'admin',\n  forgetpassp:'admin'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}